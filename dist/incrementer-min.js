angular.module("incrementer",[]).directive("incrementer",["$timeout","$interval",function(e,n){"use strict";var t=function(e,n){var t={min:0,max:200,step:1,prefix:void 0,postfix:void 0,decimals:0,stepInterval:200,stepIntervalDelay:200,initval:""};angular.forEach(t,function(t,a){e[a]=n.hasOwnProperty(a)?n[a]:t}),e.val=n.value||e.initval};return{restrict:"EA",require:"?ngModel",scope:!0,replace:!0,link:function(a,i,l,r){t(a,l);var s,o,c,p=a.val;r.$setViewValue(a.val),a.decrement=function(){p=a.val;var e=parseFloat(parseFloat(Number(a.val))-parseFloat(a.step)).toFixed(a.decimals);return e<parseInt(a.min)?(e=parseFloat(a.min).toFixed(a.decimals),a.val=e,void r.$setViewValue(e)):(a.val=e,void r.$setViewValue(e))},a.increment=function(){p=a.val;var e=parseFloat(parseFloat(Number(a.val))+parseFloat(a.step)).toFixed(a.decimals);e>parseInt(a.max)||(a.val=e,r.$setViewValue(e))},a.startSpinUp=function(t){a.checkValue(),a.increment(),c=Date.now(),a.stopSpin(),t||e(function(){o=n(function(){a.increment()},a.stepInterval)},a.stepIntervalDelay)},a.startSpinDown=function(t){if(a.checkValue(),a.decrement(),c=Date.now(),!t){e(function(){o=n(function(){a.decrement()},a.stepInterval)},a.stepIntervalDelay)}},a.stopSpin=function(){Date.now()-c>a.stepIntervalDelay?(e.cancel(s),n.cancel(o)):e(function(){e.cancel(s),n.cancel(o)},a.stepIntervalDelay)},a.checkValue=function(){var e;""===a.val||a.val.match(/^-?(?:\d+|\d*\.\d+)$/i)||(e=""!==p?parseFloat(p).toFixed(a.decimals):parseFloat(a.min).toFixed(a.decimals),a.val=e,r.$setViewValue(e))}},template:'<div class="incrementer"><div class="row incrementer-row"><a class="button button-icon icon ion-minus" on-touch="startSpinDown()" on-release="stopSpin()"></a>  <span class="prefix" ng-show="prefix" ng-bind="prefix"></span><div class="input-container" on-drag-right="startSpinDown(true)" on-drag-left="startSpinUp(true)" on-release="stopSpin(true)"><span ng-model="val" class="incrementer-value" ng-blur="checkValue()">{{val}}</span> <span class="postfix" ng-show="postfix" ng-bind="postfix"></span></div><a class="button button-icon icon ion-plus" on-touch="startSpinUp()" on-release="stopSpin()"></a></div></div>'}}]);
angular.module("timeincrementer",[]).directive("timeincrementer",["$timeout","$interval",function(e,a){"use strict";var n=function(e,a){var n={min:0,max:200,min2:0,max2:60,step:1,val2:"0",prefix:void 0,postfix:void 0,postfix2:"m",decimals:0,stepInterval:200,stepIntervalDelay:600,initval:"",initialSelection:void 0};angular.forEach(n,function(n,t){e[t]=a.hasOwnProperty(t)?a[t]:n}),e.val=a.value||e.initval};return{restrict:"EA",require:"ngModel",scope:!0,replace:!0,link:function(t,i,l,s){n(t,l);var r,o,v,c=t.val,p=t.val2;"minutes"!==t.initialSelection?t.view="minutes":t.view="hours";var u={hours:t.val,minutes:t.val2};s.$setViewValue(u),s.$render(),t.toggleView=function(e){t.view=e},t.decrement=function(){if("hours"==t.view){c=t.val;var e=parseFloat(parseFloat(Number(t.val))-parseFloat(t.step)).toFixed(t.decimals);if(e<parseInt(t.min))return e=parseFloat(t.min).toFixed(t.decimals),t.val=e,void t.refreshModels(t.val,t.val2);t.val=e,t.refreshModels(t.val,t.val2)}else{c=t.val2;var e=parseFloat(parseFloat(Number(t.val2))-parseFloat(t.step)).toFixed(t.decimals);if(e<parseInt(t.min2))return e=parseFloat(t.min2).toFixed(t.decimals),t.val2=e,void t.refreshModels(t.val1,t.val2);t.val2=e,t.refreshModels(t.val,t.val2)}},t.increment=function(){if("hours"==t.view){c=t.val;var e=parseFloat(parseFloat(Number(t.val))+parseFloat(t.step)).toFixed(t.decimals);if(e>parseInt(t.max))return;t.val=e,t.refreshModels(t.val,t.val2)}if("minutes"==t.view){p=t.val2;var e=parseFloat(parseFloat(Number(t.val2))+parseFloat(t.step)).toFixed(t.decimals);if(e>parseInt(t.max2))return;t.val2=e,t.refreshModels(t.val,t.val2)}},t.startSpinUp=function(n){t.checkValue(),t.increment(),v=Date.now(),t.stopSpin(),n||e(function(){o=a(function(){t.increment()},t.stepInterval)},t.stepIntervalDelay)},t.startSpinDown=function(n){if(t.checkValue(),t.decrement(),v=Date.now(),!n){e(function(){o=a(function(){t.decrement()},t.stepInterval)},t.stepIntervalDelay)}},t.stopSpin=function(){Date.now()-v>t.stepIntervalDelay?(e.cancel(r),a.cancel(o)):e(function(){e.cancel(r),a.cancel(o)},t.stepIntervalDelay)},t.checkValue=function(){var e;"hours"==t.view?""===t.val||t.val.match(/^-?(?:\d+|\d*\.\d+)$/i)||(e=""!==c?parseFloat(c).toFixed(0):parseFloat(t.min).toFixed(t.decimals),t.val=e,t.refreshModels(t.val,t.val2)):""===t.val2||t.val2.match(/^-?(?:\d+|\d*\.\d+)$/i)||(e=""!==p?parseFloat(p).toFixed(t.decimals):parseFloat(t.min).toFixed(t.decimals),t.val2=e,t.refreshModels(t.val,t.val2))},t.refreshModels=function(e,a){var n={hours:e,minutes:a};s.$setViewValue(n),s.$render()}},template:'<div class="incrementer"><div class="row incrementer-row"><a class="button button-icon icon ion-minus" on-touch="startSpinDown()" on-release="stopSpin()"></a>  <span class="prefix" ng-show="prefix" ng-bind="prefix"></span><div class="input-container" on-drag-right="startSpinDown(true)" on-drag-left="startSpinUp(true)" on-release="stopSpin(true)"><div class="hour-container" ng-click="toggleView(&quot;hours&quot)"><span ng-model="val" class="incrementer-value" ng-blur="checkValue()">{{val}}</span> <span class="postfix" ng-show="postfix" ng-bind="postfix"></span></div><div class="minute-container" ng-click="toggleView(&quot;minutes&quot)"><span ng-model="val2" class="incrementer-value" ng-blur="checkValue()">{{val2}}</span> <span class="postfix" ng-show="postfix2" ng-bind="postfix2"></span></div></div><a class="button button-icon icon ion-plus" on-touch="startSpinUp()" on-release="stopSpin()"></a></div></div>'}}]);